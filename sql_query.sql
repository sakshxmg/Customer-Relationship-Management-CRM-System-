/*CONSIDERABLE QUESTIONS TO IMPROVE PRODUCTIVITY

1. Which Customers Made the Most Purchases?
2. What is the Total Revenue Generated by Each Sales Representative?
3. What is the Average Rating Given by Customers for Each Product?
4. Which Products are Generating the Most Revenue?
5. What are the Most Common Types of Customer Interactions?
6. Which Sales Representatives Have the Best Customer Feedback?*/


-- Customers Table
DROP TABLE IF EXISTS Customers;
CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Email VARCHAR(100),
    Phone VARCHAR(15),
    Address VARCHAR(255),
    City VARCHAR(50),
    State VARCHAR(50),
    ZipCode VARCHAR(10),
    DateJoined DATE
);


-- Products Table
DROP TABLE IF EXISTS Products;
CREATE TABLE Products (
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(100),
    ProductCategory VARCHAR(50),
    Price DECIMAL(10, 2),
    StockQuantity INT
);


-- Sales_Reps Table
DROP TABLE IF EXISTS Sales_Reps;
CREATE TABLE Sales_Reps (
    SalesRepID INT PRIMARY KEY,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Email VARCHAR(100),
    Phone VARCHAR(15),
    HireDate DATE
);

-- Customer_Interactions Table
DROP TABLE IF EXISTS Customer_Interactions;
CREATE TABLE Customer_Interactions (
    InteractionID INT PRIMARY KEY,
    CustomerID INT,
    SalesRepID INT,
    InteractionDate DATE,
    InteractionType VARCHAR(50),
    Notes TEXT,
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID),
    FOREIGN KEY (SalesRepID) REFERENCES Sales_Reps(SalesRepID)
);

-- Customer_Feedback Table
DROP TABLE IF EXISTS Customer_Feedback;
CREATE TABLE Customer_Feedback (
    FeedbackID INT PRIMARY KEY,
    CustomerID INT,
    FeedbackDate DATE,
    FeedbackType VARCHAR(50),
    Rating INT CHECK (Rating BETWEEN 1 AND 5),
    Comments TEXT,
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);

-- Sales Table

CREATE TABLE Sales (
    SaleID INT PRIMARY KEY,
    CustomerID INT,
    ProductID INT,
    SalesRepID INT,
    SaleDate DATE,
    Quantity INT,
    TotalAmount DECIMAL(10, 2),
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID),
    FOREIGN KEY (SalesRepID) REFERENCES Sales_Reps(SalesRepID)
);


-- Inserting into Customers
INSERT INTO Customers VALUES 
(1, 'John', 'Doe', 'johndoe@example.com', '123-456-7890', '123 Elm Street', 'Los Angeles', 'CA', '90001', '2024-01-15'),
(2, 'Jane', 'Smith', 'janesmith@example.com', '987-654-3210', '456 Oak Avenue', 'San Francisco', 'CA', '94102', '2024-02-20');

-- Inserting into Products
INSERT INTO Products VALUES 
(1, 'Laptop', 'Electronics', 1200.00, 50),
(2, 'Smartphone', 'Electronics', 800.00, 100),
(3, 'Tablet', 'Electronics', 500.00, 80);

-- Inserting into Sales_Reps
INSERT INTO Sales_Reps VALUES 
(1, 'Alice', 'Johnson', 'alice.johnson@example.com', '234-567-8901', '2023-05-12'),
(2, 'Bob', 'Williams', 'bob.williams@example.com', '345-678-9012', '2023-06-18');

-- Inserting into Sales
INSERT INTO Sales VALUES 
(1, 1, 1, 1, '2024-03-01', 1, 1200.00),
(2, 2, 2, 2, '2024-03-05', 2, 1600.00);

-- Inserting into Customer_Interactions
INSERT INTO Customer_Interactions VALUES 
(1, 1, 1, '2024-03-01', 'Product Inquiry', 'Customer inquired about laptop features.'),
(2, 2, 2, '2024-03-05', 'Sales Follow-up', 'Followed up on smartphone purchase.');

-- Inserting into Customer_Feedback
INSERT INTO Customer_Feedback VALUES 
(1, 1, '2024-03-10', 'Product Quality', 4, 'The laptop is good, but battery life could be better.'),
(2, 2, '2024-03-12', 'Service Experience', 5, 'Excellent service by the sales representative.');


-- 1. Which Customers Made the Most Purchases?

SELECT C.CustomerID, C.FirstName, C.LastName, COUNT(S.SaleID) AS TotalPurchases
FROM Customers C
JOIN Sales S ON C.CustomerID = S.CustomerID
GROUP BY C.CustomerID, C.FirstName, C.LastName
ORDER BY TotalPurchases DESC;

-- 2. What is the Total Revenue Generated by Each Sales Representative?

SELECT SR.SalesRepID, SR.FirstName, SR.LastName, SUM(S.TotalAmount) AS TotalRevenue
FROM Sales_Reps SR
JOIN Sales S ON SR.SalesRepID = S.SalesRepID
GROUP BY SR.SalesRepID, SR.FirstName, SR.LastName
ORDER BY TotalRevenue DESC;

-- 3. What is the Average Rating Given by Customers for Each Product?

SELECT P.ProductID, P.ProductName, AVG(CF.Rating) AS AverageRating
FROM Products P
JOIN Sales S ON P.ProductID = S.ProductID
JOIN Customer_Feedback CF ON S.CustomerID = CF.CustomerID
GROUP BY P.ProductID, P.ProductName
ORDER BY AverageRating DESC;

-- 4. Which Products are Generating the Most Revenue?

SELECT P.ProductID, P.ProductName, SUM(S.TotalAmount) AS TotalRevenue
FROM Products P
JOIN Sales S ON P.ProductID = S.ProductID
GROUP BY P.ProductID, P.ProductName
ORDER BY TotalRevenue DESC;

-- 5. What are the Most Common Types of Customer Interactions?

SELECT InteractionType, COUNT(InteractionID) AS InteractionCount
FROM Customer_Interactions
GROUP BY InteractionType
ORDER BY InteractionCount DESC;

-- 6. Which Sales Representatives Have the Best Customer Feedback?

SELECT SR.SalesRepID, SR.FirstName, SR.LastName, AVG(CF.Rating) AS AverageRating
FROM Sales_Reps SR
JOIN Sales S ON SR.SalesRepID = S.SalesRepID
JOIN Customer_Feedback CF ON S.CustomerID = CF.CustomerID
GROUP BY SR.SalesRepID, SR.FirstName, SR.LastName
ORDER BY AverageRating DESC;
